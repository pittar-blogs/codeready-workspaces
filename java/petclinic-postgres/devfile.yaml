metadata:
  name: spring-petclinic
projects:
  - name: spring-petclinic
    source:
      location: 'https://github.com/pittar/spring-petclinic.git'
      startPoint: crw-blog
      type: git
components:
  - id: redhat/vscode-yaml/latest
    type: chePlugin
  - id: redhat/vscode-xml/latest
    type: chePlugin
  - id: redhat/java11/latest
    type: chePlugin
  - id: redhat/dependency-analytics/latest
    type: chePlugin
  - mountSources: true
    endpoints:
      - name: petclinic-web
        port: 8081
    memoryLimit: 768Mi
    type: dockerimage
    volumes:
      - name: m2
        containerPath: /home/jboss/.m2
    alias: maven
    image: registry.redhat.io/codeready-workspaces/plugin-java11-rhel8:2.8
    env:
      - value: >-
          -XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
          -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4
          -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true
          -Xms20m -Djava.security.egd=file:/dev/./urandom
          -Duser.home=/home/jboss
        name: JAVA_OPTS
      - value: $(JAVA_OPTS)
        name: MAVEN_OPTS
  - alias: mysql
    endpoints:
      - name: mysql
        port: 3306
    memoryLimit: 512Mi
    type: dockerimage
    image: 'registry.redhat.io/rhel8/mysql-80:latest'
    env:
      - value: petclinic
        name: MYSQL_USER
      - value: petclinic
        name: MYSQL_PASSWORD
      - value: petclinic
        name: MYSQL_DATABASE
  - alias: phpmyadmin
    endpoints:
      - name: phpmyadmin
        port: 8080
    memoryLimit: 512Mi
    type: dockerimage
    image: 'docker.io/phpmyadmin:5.1'
    env:
      - value: "1"
        name: PMA_ARBITRARY
apiVersion: 1.0.0
commands:
  - name: build
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/spring-petclinic'
        type: exec
        command: >-
          MAVEN_OPTS="-Xmx200m" && mvn -Duser.home=${HOME} -DskipTests clean
          install
        component: maven
  - name: Debug remote java application
    actions:
      - referenceContent: |
          {
           "version": "0.2.0",
           "configurations": [
             {
               "type": "java",
               "name": "Debug (Attach) - Remote",
               "request": "attach",
               "hostName": "localhost",
               "port": 8000
             }]
           }
        type: vscode-launch
  - name: run
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/spring-petclinic'
        type: exec
        command: 'MAVEN_OPTS="-Xmx200m" && mvn -Duser.home=${HOME} spring-boot:run -Dspring-boot.run.profiles=mysql --server.port=8081'
        component: maven
  - name: debug
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/spring-petclinic'
        type: exec
        command: >-
          mvn  -Duser.home=${HOME} spring-boot:run -Drun.jvmArguments="-Xdebug
          -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000" -Dspring-boot.run.profiles=mysql --server.port=8081
        component: maven
  - name: test
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/spring-petclinic'
        type: exec
        command: 'MAVEN_OPTS="-Xmx200m" && mvn -Duser.home=${HOME} verify'
        component: maven
